version: 2.1
orbs:
  barkendeploy: navikt/barkendeploy@dev:master
jobs:
  linux_build:
    docker:
      - image: "circleci/rust:1.33.0"
    steps:
      - checkout
      - setup_remote_docker
      - barkendeploy/init
      - run:
          name: Install required dependencies
          command: |
            sudo apt update
            sudo apt install -y musl musl-tools
      - run:
          name: Install build target
          command: rustup target add x86_64-unknown-linux-musl
      - run:
          name: Run tests
          command: cargo test --release --target x86_64-unknown-linux-musl
      - run:
          name: Build executable
          command: cargo build --release --target x86_64-unknown-linux-musl
      - store_artifacts:
          path: target/x86_64-unknown-linux-musl/release/restgw-iac
      - barkendeploy/docker-build
      - barkendeploy/docker-push
  deploy:
    docker:
      - image: "navikt/deployment-cli:44bb04ecc11c0e57ac539744411c70794dd31899"
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Set up environment variables
          command: cat /tmp/workspace/properties.env >> $BASH_ENV
      - run:
          name: Create github deployment for dev-fss
          command: source $BASH_ENV; deployment-cli deploy create --cluster=prod-fss --team=teamsykefravr -r=service_account.yaml -r=job.yaml --version=${DOCKER_TAG} --repository=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
workflows:
  version: 2
  build_and_release:
    jobs:
      - linux_build:
          context: barkendeploy
          filters:
            tags:
              only: master
      - barkendeploy/deploy-publish:
          cluster: dev-fss
          context: barkendeploy
          requires:
            - build_jar
          filters:
            branches:
              only: master
